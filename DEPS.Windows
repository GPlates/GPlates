Dependencies for Windows

Table of Contents

 1. Introduction
 2. Environment variables
 3. Program and library dependencies

Introduction

This page lists the program and library dependencies which need to be satisfied
to be able to build GPlates from source on Windows.

Environment variables

Instructions below may direct you to modify the PATH variable, to add
directories to the search path for executable files. (Note that the name of the
variable is not case sensitive, so it could be called Path instead.)

 * Windows XP:
     1. Click on the Start button.
     2. Right-click on My Computer and select Properties.
     3. On the Advanced tab, click on the Environment Variables button.
     4. If you edit the PATH variable in the User variables section, the change
        only affects your account. If you edit the PATH variable in the System
        variables section (assuming you have sufficient privileges to do so),
        the change will affect all users on the computer. Edit the variable in
        whichever section is most suitable. If the PATH variable does not exist,
        click the New button to add it. Separate paths with semicolons.
 * Windows Vista and Windows 7 (if you have administrator access and you wish
   to change the PATH variable for all users):
     1. Click on the Start button.
     2. Right-click on Computer and select Properties.
     3. Click on the Advanced system settings link in the left-hand Tasks panel.
     4. If prompted, enter an administrator password for UAC.
     5. On the Advanced tab, click on the Environment Variables button.
     6. Edit the PATH variable in the System variables section. If the PATH
        variable does not exist, click the New button to add it. Separate paths
        with semicolons.
 * Windows Vista and Windows 7 (if you do not have administrator access or you
   wish to change the PATH variable only for your account):
     1. Click on the Start button.
     2. Click your account's picture at the very top of the second column.
     3. Click on the Change my environment variables link in the left-hand Tasks
        panel.
     4. Edit the PATH variable in the User variables section. If the PATH
        variable does not exist, click the New button to add it. Separate paths
        with semicolons.

Program and library dependencies

The following libraries and binaries are required to build GPlates. If you
cannot use, or you cannot obtain, the exact same version as listed, you should
try to use a version with the same major and minor build numbers (i.e. for a
version number of x.y.z, you should aim to keep x and y the same). However,
GPlates should compile and function correctly with newer versions of these
dependencies.

Microsoft Visual Studio

  1. Install Visual Studio 8 (2005) or newer.

CMake

  1. Get and install cmake-2.6.2-win32-x86.exe from: http://www.cmake.org/

Qt

  1. Download qt-win-opensource-src-4.4.3.zip from: http://get.qt.nokia.com/qt/source/
  2. Extract it to a path containing no spaces 
  3. Run: configure
      * If there are errors, open the "Visual Studio 200x Command Prompt" from
        the Start menu, and run configure from there.
  4. Run: nmake 
  5. In VC access Tools, Options, Projects, Directories and add the following Qt 
    directories: 
      * Executable files: \bin
  6. Add the Qt \bin and \qmake directories to the PATH environment variable
     (see above).
	 
GLEW
  1. Download and extract glew-1.5.4-win32.zip from: http://glew.sourceforge.net/
  2. Add the \include directory to the CMAKE_INCLUDE_PATH environment variable.
  3. Add the GLEW \Bin directory to the PATH environment variable (see above).

Boost

  1. Get and install boost_1_34_1_setup.exe from:
     http://www.boostpro.com/download
	 * Under 'Select Default Variants' select your compiler (eg, 'Visual C++ 8.0'),
	   and select all 'Variants'.
     * In addition to the default packages, also install "Program Options",
	    "Test (unit test framework)" and "Thread".
  2. Add the \boost\boost_1_xx directory to the CMAKE_INCLUDE_PATH environment
     variable.
  3. Add the \boost\boost_1_xx\lib directory to the CMAKE_LIBRARY_PATH
     environment variable.

GDAL

	1.Get GDAL source code from http://trac.osgeo.org/gdal/wiki/DownloadSource.
	2.Use Vistual Studio to build GDAL.
	3.Set 'GDAL_DIR' environment variable to the root path of GDAL.
	
Proj4

  1. Get Proj4 source file from http://trac.osgeo.org/proj/.
  2. Read $Proj4_ROOT/readme.txt and build Proj4.
  3. Add $Proj4_ROOT/src into CMAKE_INCLUDE_PATH and CMAKE_LIBRARY_PATH.
  
CGAL

  1. Get and install the CGAL 3.5 source code from http://www.cgal.org/:
     * Download and run 'CGAL-3.5-Setup.exe'.
	 * Under 'Select Default Variants' leave everything unticked (except for 'Platforms').
	 * Under 'Choose Components' untick everything ('Main CGAL' cannot be unticked).
	 * Select the install location (don't use spaces in the path) - for example, 'C:/SDK/cgal/CGAL-3.5'.
	     * In particular, do not install under Program Files on Windows Vista and
	       above because you will likely run into permissions issues later.
	 * Tick 'CGAL_DIR' environment variable - note: this is necessary for GPlates to be able to find CGAL.
  2. Prepare CGAL for building by running 'cmake-gui.exe' (this requires CMAKE to have already been installed):
     * Specify the CGAL installation location as the source and build directories.
     * Click the 'Configure' button.
	 * Untick all 'WITH_*' options.
	 * Change 'CMAKE_INSTALL_PREFIX' to the installation location (eg, 'C:/SDK/cgal/CGAL-3.5').
	 * Click the 'Configure' button again.
	 * Click the 'Generate' button.
	 * If this is successful then a Visual Studio solution file 'CGAL.sln'.
  3. Build CGAL:
     * Open the generated Visual Studio solution file 'CGAL.sln'.
	 * Select the 'Release' build type.
	 * (GPlates developers will also want to build 'Debug', etc so that similar builds in
	   GPlates can find the CGAL library of the correct build type).
	 * Build the 'INSTALL' project.
  When GPlates is built it should find CGAL via the "CGAL_DIR" environment variable.

gzip

  1. Get and install gzip from http://gnuwin32.sourceforge.net/packages/gzip.htm 
     . Select the 'complete package, except sources' link.
       * Alternatively, Cygwin (http://www.cygwin.com/), a complete POSIX
         environment for Windows, contains gzip.
  2. Add the location of the gzip executable to the PATH environment variable
     (see above).

ImageMagick

  1. Get and install the Q16 DLL version of ImageMagick from
     http://www.imagemagick.org/script/binary-releases.php
  2. During the installation, a number of options will be presented to you:
       * Ensure "Add application directory to your system path" is selected.
       * Ensure "Install development headers and libraries for C and C++" is selected.
       * The other options are not required, but may be chosen to taste.

Subversion (optional, but recommended for developers)

  1. Get the command-line client from http://www.collab.net/downloads/subversion/
     Either the server and client bundle or the client-only bundle will suffice.
     Even if you have installed TortoiseSVN, this needs to be installed separately
     to provide the `svn` and `svnversion` command line tools.
      * Alternatively, Cygwin (http://www.cygwin.com/) contains Subversion.
  2. Add the location of the `svn` executable to the PATH environment variable
     (see above).
  If Subversion is not installed, the build number and branch name will not be
  automatically inserted into the About dialog box by the build process.

Graphviz (required for documentation, but not required to build GPlates)

  1. Get and install the latest version of Graphviz from http://www.graphviz.org/
  2. Add the location of the Graphviz main executable to the PATH environment
     variable (see above). This must be added *after* the FWTools \bin folder
     (which was added in a previous step).

Doxygen (required for documentation, but not required to build GPlates)

  1. Get and install the latest version of Doxygen from
     http://www.stack.nl/~dimitri/doxygen/download.html#latestsrc
      * Alternatively, Cygwin (http://www.cygwin.com/) contains Doxygen.
  2. Add the location of the Doxygen main executable to the PATH environment
     variable (see above).
