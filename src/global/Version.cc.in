/* $Id$ */

/**
 * \file 
 * $Revision$
 * $Date$
 * 
 * Copyright (C) 2019 The University of Sydney, Australia
 *
 * This file is part of GPlates.
 *
 * GPlates is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, version 2, as published by
 * the Free Software Foundation.
 *
 * GPlates is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

// Using 'global/' prefix since the generated version of this file might not be in same directory as "Version.h" (ie, in 'global/').
#include "global/Version.h"

// If you see \@GPLATES_PACKAGE_VERSION_NAME\@ in this string then you are looking at the
// file that the CMake build system will use to generate a new file with the appropriate
// GPlates version string replacement.
// If not then you are looking at the file generated by CMake.
QString
GPlatesGlobal::Version::get_GPlates_version()
{
	return QString("@GPLATES_PACKAGE_VERSION_NAME@");
}

unsigned int
GPlatesGlobal::Version::get_GPlates_version_major()
{
	return @GPlates_VERSION_MAJOR@;
}

unsigned int
GPlatesGlobal::Version::get_GPlates_version_minor()
{
	return @GPlates_VERSION_MINOR@
			+0; // In case minor component not specified in CMake project() command.
}

unsigned int
GPlatesGlobal::Version::get_GPlates_version_patch()
{
	return @GPlates_VERSION_PATCH@
			+0; // In case patch component not specified in CMake project() command.
}

boost::optional<QString>
GPlatesGlobal::Version::get_GPlates_version_prerelease()
{
	const QString version_prerelease("@GPLATES_VERSION_PRERELEASE_NAME@");
	if (version_prerelease.isEmpty())
	{
		return boost::none;
	}

	return version_prerelease;
}

unsigned int
GPlatesGlobal::Version::get_pyGPlates_revision()
{
	return @PYGPLATES_REVISION@;
}

QString
GPlatesGlobal::Version::get_working_copy_version_number()
{
	return QString("@GPlates_WC_LAST_CHANGED_REV@");
}

QString
GPlatesGlobal::Version::get_working_copy_branch_name()
{
	return QString("@GPlates_WC_BRANCH_NAME@");
}
