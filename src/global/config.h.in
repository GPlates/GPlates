#ifndef GPLATES_GLOBAL_CONFIG_H
#define GPLATES_GLOBAL_CONFIG_H

/* src/global/config.h.in.  CMake generates src/global/config.h */

/* define if we can link with the OpenGL framework */
#cmakedefine CAN_LINK_OPENGL_FRAMEWORK

/* define if bool is a built-in type */
#cmakedefine HAVE_BOOL

/* define if the Boost library is available */
#cmakedefine HAVE_BOOST

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H

/* define if the compiler supports dynamic_cast<> */
#cmakedefine HAVE_DYNAMIC_CAST

/* define if the compiler supports exceptions */
#cmakedefine HAVE_EXCEPTIONS

/* Define to 1 if you have the <expat.h> header file. */
#cmakedefine HAVE_EXPAT_H

/* define if the compiler supports the explicit keyword */
#cmakedefine HAVE_EXPLICIT

/* Define to 1 if you have the <gdal/ogrsf_frmts.h> header file. */
#cmakedefine HAVE_GDAL_OGRSF_FRMTS_H

/* Define if have a "gdal_version.h" header file. */
#cmakedefine HAVE_GDAL_VERSION_H
/* Define if have a "gdal_version.h" header file and it's prefixed by "gdal/" */
#cmakedefine HAVE_GDAL_VERSION_H_LOWERCASE_GDAL_PREFIX
/* Define if have a "gdal_version.h" header file and it's prefixed by "GDAL/" */
#cmakedefine HAVE_GDAL_VERSION_H_UPPERCASE_GDAL_PREFIX

/* define if the compiler supports IEEE math library */
#cmakedefine HAVE_IEEE_MATH

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H

/* Define to 1 if you have the `expat' library (-lexpat). */
#cmakedefine HAVE_LIBEXPAT

/* Define to 1 if you have the `GL' library (-lGL). */
#cmakedefine HAVE_LIBGL

/* Define to 1 if you have the `GLU' library (-lGLU). */
#cmakedefine HAVE_LIBGLU

/* Define to 1 if you have the `proj' library (-lproj). */
#undef HAVE_LIBPROJ

/* define if the compiler supports member constants */
#cmakedefine HAVE_MEMBER_CONSTANTS

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H

/* define if the compiler implements namespaces */
#cmakedefine HAVE_NAMESPACES

/* Define to 1 if you have the <ogrsf_frmts.h> header file. */
#cmakedefine HAVE_OGRSF_FRMTS_H

/* Define to 1 if you have the <proj_api.h> header file. */
#undef HAVE_PROJ_API_H

/* define if the compiler has stringstream */
#cmakedefine HAVE_SSTREAM

/* define if the compiler supports static_cast<> */
#cmakedefine HAVE_STATIC_CAST

/* define if the compiler supports ISO C++ standard library */
#cmakedefine HAVE_STD

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H

/* define if the compiler supports Standard Template Library */
#cmakedefine HAVE_STL

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H

/* define if the compiler supports basic templates */
#cmakedefine HAVE_TEMPLATES

/* define if the compiler recognizes typename */
#cmakedefine HAVE_TYPENAME

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* Name of package */
#cmakedefine PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT

/* Development version */
#cmakedefine PACKAGE_IS_BETA

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS

/* Version number of package */
#cmakedefine VERSION

/* The full path to certain system header files */
#cmakedefine BOOST_MATH_SPECIAL_FUNCTIONS_FPCLASSIFY_HPP_PATH "${BOOST_MATH_SPECIAL_FUNCTIONS_FPCLASSIFY_HPP_PATH}"
#cmakedefine BOOST_MATH_TOOLS_REAL_CAST_HPP_PATH "${BOOST_MATH_TOOLS_REAL_CAST_HPP_PATH}"
#cmakedefine BOOST_CSTDINT_HPP_PATH "${BOOST_CSTDINT_HPP_PATH}"

/* Whether GPlates is not built with Python support */
#cmakedefine GPLATES_NO_PYTHON

/* Check CGAL-3.7 patch in src/system-fixes/cgal/Constrained_Delaunay_triangulation_2.h */
#cmakedefine HAVE_GCAL_PATCH_CDT2_H

/* Whether GPlates is not built with Symbol stuff */
#cmakedefine GPLATES_NO_SYMBOL

/* Whether GPlates ignores environment variables when initilizing embeded Python interpreter */
#cmakedefine GPLATES_IGNORE_PYTHON_ENVIRONMENT

#endif // GPLATES_GLOBAL_CONFIG_H
