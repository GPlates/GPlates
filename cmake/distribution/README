Creating Qt icons
-----------------
The executable application icon that is displayed on the desktop (prior to application execution) needs to be created differently for each platform.

Windows ("gplates_desktop_icon.ico"):
 * The icon file "gplates_desktop_icon.ico" was generated by using the convertico website (http://www.convertico.com) to convert from "src/qt-resources/GPlates-icon-160x160-opaque.png".
   - On that website, under "Choose Icon Layer Sizes" select 128x128, 64x64, 48x48, 32x32 and 16x16.
   - Drag'n'drop "GPlates-icon-160x160-opaque.png" onto the website and then click on the download link to get "GPlates-icon-160x160-opaque.ico".
   - Then rename "GPlates-icon-160x160-opaque.ico" to "gplates_desktop_icon.ico" and move it to "cmake/distribution/".
   - Note that you may need to restart Windows before the new icon shows up properly
     (otherwise it still displays as the old icon, even though it's clearly the new one if you open it in an image editor).
 * The "gplates_desktop_icon.rc" (which references the above '.ico' file and is added to CMake as a source file) takes care of embedding the icon into  the GPlates executable.

Mac OSX ("gplates_desktop_icon.icns"):
 * The following instructions can also be found at:
    https://developer.apple.com/library/archive/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Optimizing/Optimizing.html
 * Create a sub-directory called "gplates_desktop_icon.iconset".
 * In that sub-directory create the following PNG files:
    icon_16x16.png
    icon_16x16@2x.png
    icon_32x32.png
    icon_32x32@2x.png
    icon_128x128.png
    icon_128x128@2x.png
 * Note that 64x64 and 64x64@2x are missing from the above list (as recommended by Apple, not sure why though).
 * The "@2x" images are for Retina displays and should be twice the resolution of the associated non-"@2x" images.
   For example, "icon_16x16@2x.png" should be 32x32 pixels which, in our case, means it contains the same image data as "icon_32x32.png"
   (since we're just downsampling a high-res image and not rendering, for example, lines that are 1 device-*independent* pixel wide into
   each resolution which would amount to 1 device pixel for the 32x32 image and 2 device pixels for the 16x16@2x image).
 * To create these images you can use image software such as GIMP to downsample "src/qt-resources/GPlates-icon-160x160-opaque.png".
 * Finally create the 'gplates_desktop_icon.icns' icon file from the 'gplates_desktop_icon.iconset' directory by running:
   iconutil -c icns -o gplates_desktop_icon.icns gplates_desktop_icon.iconset 
 * And move "gplates_desktop_icon.icns" to "cmake/distribution/".
 * Note that due to high-resolution Retina displays the original Icon Composer application is no longer recommended or available.
